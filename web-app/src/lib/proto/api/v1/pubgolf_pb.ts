// PubGolf defines the app-facing API service for the in-game apps.

// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file api/v1/pubgolf.proto (package api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Color, EventRegistration, Form, FormSubmission, Player, PlayerData, ScoreBoard, ScoringCategory, Venue } from "./shared_pb";
import { file_api_v1_shared } from "./shared_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api/v1/pubgolf.proto.
 */
export const file_api_v1_pubgolf: GenFile = /*@__PURE__*/
  fileDesc("ChRhcGkvdjEvcHViZ29sZi5wcm90bxIGYXBpLnYxIi4KFENsaWVudFZlcnNpb25SZXF1ZXN0EhYKDmNsaWVudF92ZXJzaW9uGAEgASgNIuMBChVDbGllbnRWZXJzaW9uUmVzcG9uc2USQwoOdmVyc2lvbl9zdGF0dXMYASABKA4yKy5hcGkudjEuQ2xpZW50VmVyc2lvblJlc3BvbnNlLlZlcnNpb25TdGF0dXMihAEKDVZlcnNpb25TdGF0dXMSHgoaVkVSU0lPTl9TVEFUVVNfVU5TUEVDSUZJRUQQABIVChFWRVJTSU9OX1NUQVRVU19PSxABEhsKF1ZFUlNJT05fU1RBVFVTX09VVERBVEVEEAISHwobVkVSU0lPTl9TVEFUVVNfSU5DT01QQVRJQkxFEAMiYwohUHViR29sZlNlcnZpY2VDcmVhdGVQbGF5ZXJSZXF1ZXN0EhEKCWV2ZW50X2tleRgBIAEoCRInCgtwbGF5ZXJfZGF0YRgCIAEoCzISLmFwaS52MS5QbGF5ZXJEYXRhOgIYASJICiJQdWJHb2xmU2VydmljZUNyZWF0ZVBsYXllclJlc3BvbnNlEh4KBnBsYXllchgBIAEoCzIOLmFwaS52MS5QbGF5ZXI6AhgBIi8KF1N0YXJ0UGxheWVyTG9naW5SZXF1ZXN0EhQKDHBob25lX251bWJlchgBIAEoCSIaChhTdGFydFBsYXllckxvZ2luUmVzcG9uc2UiRQoaQ29tcGxldGVQbGF5ZXJMb2dpblJlcXVlc3QSFAoMcGhvbmVfbnVtYmVyGAEgASgJEhEKCWF1dGhfY29kZRgCIAEoCSJRChtDb21wbGV0ZVBsYXllckxvZ2luUmVzcG9uc2USHgoGcGxheWVyGAEgASgLMg4uYXBpLnYxLlBsYXllchISCgphdXRoX3Rva2VuGAIgASgJIhQKEkdldE15UGxheWVyUmVxdWVzdCI1ChNHZXRNeVBsYXllclJlc3BvbnNlEh4KBnBsYXllchgBIAEoCzIOLmFwaS52MS5QbGF5ZXIiGAoWRGVsZXRlTXlBY2NvdW50UmVxdWVzdCIZChdEZWxldGVNeUFjY291bnRSZXNwb25zZSIlChBHZXRQbGF5ZXJSZXF1ZXN0EhEKCXBsYXllcl9pZBgBIAEoCSIzChFHZXRQbGF5ZXJSZXNwb25zZRIeCgZwbGF5ZXIYASABKAsyDi5hcGkudjEuUGxheWVyIl8KGVVwZGF0ZVJlZ2lzdHJhdGlvblJlcXVlc3QSEQoJcGxheWVyX2lkGAEgASgJEi8KDHJlZ2lzdHJhdGlvbhgCIAEoCzIZLmFwaS52MS5FdmVudFJlZ2lzdHJhdGlvbiJNChpVcGRhdGVSZWdpc3RyYXRpb25SZXNwb25zZRIvCgxyZWdpc3RyYXRpb24YASABKAsyGS5hcGkudjEuRXZlbnRSZWdpc3RyYXRpb24iTgoXVXBkYXRlUGxheWVyRGF0YVJlcXVlc3QSEQoJcGxheWVyX2lkGAEgASgJEiAKBGRhdGEYAiABKAsyEi5hcGkudjEuUGxheWVyRGF0YSI8ChhVcGRhdGVQbGF5ZXJEYXRhUmVzcG9uc2USIAoEZGF0YRgBIAEoCzISLmFwaS52MS5QbGF5ZXJEYXRhImEKEkdldFNjaGVkdWxlUmVxdWVzdBIRCglldmVudF9rZXkYASABKAkSIAoTY2FjaGVkX2RhdGFfdmVyc2lvbhgCIAEoDUgAiAEBQhYKFF9jYWNoZWRfZGF0YV92ZXJzaW9uItADChNHZXRTY2hlZHVsZVJlc3BvbnNlEhsKE2xhdGVzdF9kYXRhX3ZlcnNpb24YASABKA0SOwoIc2NoZWR1bGUYAiABKAsyJC5hcGkudjEuR2V0U2NoZWR1bGVSZXNwb25zZS5TY2hlZHVsZUgAiAEBGtECCghTY2hlZHVsZRIaChJ2aXNpdGVkX3ZlbnVlX2tleXMYASADKA0SHgoRY3VycmVudF92ZW51ZV9rZXkYAiABKA1IAIgBARIbCg5uZXh0X3ZlbnVlX2tleRgDIAEoDUgBiAEBEjkKEG5leHRfdmVudWVfc3RhcnQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAKIAQESLQoJZXZlbnRfZW5kGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImChljdXJyZW50X3ZlbnVlX2Rlc2NyaXB0aW9uGAYgASgJSAOIAQFCFAoSX2N1cnJlbnRfdmVudWVfa2V5QhEKD19uZXh0X3ZlbnVlX2tleUITChFfbmV4dF92ZW51ZV9zdGFydEIcChpfY3VycmVudF92ZW51ZV9kZXNjcmlwdGlvbkILCglfc2NoZWR1bGUiOAoPR2V0VmVudWVSZXF1ZXN0EhEKCWV2ZW50X2tleRgBIAEoCRISCgp2ZW51ZV9rZXlzGAIgAygNItsBChBHZXRWZW51ZVJlc3BvbnNlEjQKBnZlbnVlcxgBIAMoCzIkLmFwaS52MS5HZXRWZW51ZVJlc3BvbnNlLlZlbnVlc0VudHJ5GjsKDFZlbnVlV3JhcHBlchIhCgV2ZW51ZRgBIAEoCzINLmFwaS52MS5WZW51ZUgAiAEBQggKBl92ZW51ZRpUCgtWZW51ZXNFbnRyeRILCgNrZXkYASABKA0SNAoFdmFsdWUYAiABKAsyJS5hcGkudjEuR2V0VmVudWVSZXNwb25zZS5WZW51ZVdyYXBwZXI6AjgBIiwKF0xpc3RDb250ZW50SXRlbXNSZXF1ZXN0EhEKCWV2ZW50X2tleRgBIAEoCSLrAgoYTGlzdENvbnRlbnRJdGVtc1Jlc3BvbnNlEjoKCHNlY3Rpb25zGAEgAygLMiguYXBpLnYxLkxpc3RDb250ZW50SXRlbXNSZXNwb25zZS5TZWN0aW9uGmwKE0NvbnRlbnRJdGVtTWV0YURhdGESCgoCaWQYASABKAkSFAoMZGlzcGxheV9uYW1lGAIgASgJEhAKCGljb25fa2V5GAMgASgJEiEKCmljb25fY29sb3IYBCABKAsyDS5hcGkudjEuQ29sb3IapAEKB1NlY3Rpb24SFAoMZGlzcGxheV9uYW1lGAEgASgJEk4KEGNvbnRlbnRfc2VjdGlvbnMYAiADKAsyNC5hcGkudjEuTGlzdENvbnRlbnRJdGVtc1Jlc3BvbnNlLkNvbnRlbnRJdGVtTWV0YURhdGESEAoIaWNvbl9rZXkYAyABKAkSIQoKaWNvbl9jb2xvchgEIAEoCzINLmFwaS52MS5Db2xvciIjChVHZXRDb250ZW50SXRlbVJlcXVlc3QSCgoCaWQYASABKAkiKQoWR2V0Q29udGVudEl0ZW1SZXNwb25zZRIPCgdjb250ZW50GAEgASgJIlQKGUdldFN1Ym1pdFNjb3JlRm9ybVJlcXVlc3QSEQoJZXZlbnRfa2V5GAEgASgJEhEKCXZlbnVlX2tleRgCIAEoDRIRCglwbGF5ZXJfaWQYAyABKAkiXQoaR2V0U3VibWl0U2NvcmVGb3JtUmVzcG9uc2USIwoGc3RhdHVzGAEgASgOMhMuYXBpLnYxLlNjb3JlU3RhdHVzEhoKBGZvcm0YAiABKAsyDC5hcGkudjEuRm9ybSKlAQoSU3VibWl0U2NvcmVSZXF1ZXN0EhEKCWV2ZW50X2tleRgBIAEoCRIRCgl2ZW51ZV9rZXkYAiABKA0SEQoJcGxheWVyX2lkGAMgASgJEhwKD2lkZW1wb3RlbmN5X2tleRgEIAEoCUgAiAEBEiQKBGRhdGEYBSABKAsyFi5hcGkudjEuRm9ybVN1Ym1pc3Npb25CEgoQX2lkZW1wb3RlbmN5X2tleSI6ChNTdWJtaXRTY29yZVJlc3BvbnNlEiMKBnN0YXR1cxgBIAEoDjITLmFwaS52MS5TY29yZVN0YXR1cyJbChtHZXRTY29yZXNGb3JDYXRlZ29yeVJlcXVlc3QSEQoJZXZlbnRfa2V5GAEgASgJEikKCGNhdGVnb3J5GAIgASgOMhcuYXBpLnYxLlNjb3JpbmdDYXRlZ29yeSJHChxHZXRTY29yZXNGb3JDYXRlZ29yeVJlc3BvbnNlEicKC3Njb3JlX2JvYXJkGAEgASgLMhIuYXBpLnYxLlNjb3JlQm9hcmQiQQoZR2V0U2NvcmVzRm9yUGxheWVyUmVxdWVzdBIRCglldmVudF9rZXkYASABKAkSEQoJcGxheWVyX2lkGAIgASgJIkUKGkdldFNjb3Jlc0ZvclBsYXllclJlc3BvbnNlEicKC3Njb3JlX2JvYXJkGAEgASgLMhIuYXBpLnYxLlNjb3JlQm9hcmQiPwoYR2V0U2NvcmVzRm9yVmVudWVSZXF1ZXN0EhEKCWV2ZW50X2tleRgBIAEoCRIQCgh2ZW51ZV9pZBgCIAEoCSJEChlHZXRTY29yZXNGb3JWZW51ZVJlc3BvbnNlEicKC3Njb3JlX2JvYXJkGAEgASgLMhIuYXBpLnYxLlNjb3JlQm9hcmQqzgEKC1Njb3JlU3RhdHVzEhwKGFNDT1JFX1NUQVRVU19VTlNQRUNJRklFRBAAEhkKFVNDT1JFX1NUQVRVU19SRVFVSVJFRBABEhkKFVNDT1JFX1NUQVRVU19PUFRJT05BTBACEh0KGVNDT1JFX1NUQVRVU19OT1RfUkVRVUlSRUQQAxIjCh9TQ09SRV9TVEFUVVNfU1VCTUlUVEVEX0VESVRBQkxFEAQSJwojU0NPUkVfU1RBVFVTX1NVQk1JVFRFRF9OT05fRURJVEFCTEUQBTKjDAoOUHViR29sZlNlcnZpY2USTgoNQ2xpZW50VmVyc2lvbhIcLmFwaS52MS5DbGllbnRWZXJzaW9uUmVxdWVzdBodLmFwaS52MS5DbGllbnRWZXJzaW9uUmVzcG9uc2UiABJqCgxDcmVhdGVQbGF5ZXISKS5hcGkudjEuUHViR29sZlNlcnZpY2VDcmVhdGVQbGF5ZXJSZXF1ZXN0GiouYXBpLnYxLlB1YkdvbGZTZXJ2aWNlQ3JlYXRlUGxheWVyUmVzcG9uc2UiA4gCARJXChBTdGFydFBsYXllckxvZ2luEh8uYXBpLnYxLlN0YXJ0UGxheWVyTG9naW5SZXF1ZXN0GiAuYXBpLnYxLlN0YXJ0UGxheWVyTG9naW5SZXNwb25zZSIAEmAKE0NvbXBsZXRlUGxheWVyTG9naW4SIi5hcGkudjEuQ29tcGxldGVQbGF5ZXJMb2dpblJlcXVlc3QaIy5hcGkudjEuQ29tcGxldGVQbGF5ZXJMb2dpblJlc3BvbnNlIgASSAoLR2V0TXlQbGF5ZXISGi5hcGkudjEuR2V0TXlQbGF5ZXJSZXF1ZXN0GhsuYXBpLnYxLkdldE15UGxheWVyUmVzcG9uc2UiABJUCg9EZWxldGVNeUFjY291bnQSHi5hcGkudjEuRGVsZXRlTXlBY2NvdW50UmVxdWVzdBofLmFwaS52MS5EZWxldGVNeUFjY291bnRSZXNwb25zZSIAEkIKCUdldFBsYXllchIYLmFwaS52MS5HZXRQbGF5ZXJSZXF1ZXN0GhkuYXBpLnYxLkdldFBsYXllclJlc3BvbnNlIgASXQoSVXBkYXRlUmVnaXN0cmF0aW9uEiEuYXBpLnYxLlVwZGF0ZVJlZ2lzdHJhdGlvblJlcXVlc3QaIi5hcGkudjEuVXBkYXRlUmVnaXN0cmF0aW9uUmVzcG9uc2UiABJXChBVcGRhdGVQbGF5ZXJEYXRhEh8uYXBpLnYxLlVwZGF0ZVBsYXllckRhdGFSZXF1ZXN0GiAuYXBpLnYxLlVwZGF0ZVBsYXllckRhdGFSZXNwb25zZSIAEkgKC0dldFNjaGVkdWxlEhouYXBpLnYxLkdldFNjaGVkdWxlUmVxdWVzdBobLmFwaS52MS5HZXRTY2hlZHVsZVJlc3BvbnNlIgASPwoIR2V0VmVudWUSFy5hcGkudjEuR2V0VmVudWVSZXF1ZXN0GhguYXBpLnYxLkdldFZlbnVlUmVzcG9uc2UiABJXChBMaXN0Q29udGVudEl0ZW1zEh8uYXBpLnYxLkxpc3RDb250ZW50SXRlbXNSZXF1ZXN0GiAuYXBpLnYxLkxpc3RDb250ZW50SXRlbXNSZXNwb25zZSIAElEKDkdldENvbnRlbnRJdGVtEh0uYXBpLnYxLkdldENvbnRlbnRJdGVtUmVxdWVzdBoeLmFwaS52MS5HZXRDb250ZW50SXRlbVJlc3BvbnNlIgASXQoSR2V0U3VibWl0U2NvcmVGb3JtEiEuYXBpLnYxLkdldFN1Ym1pdFNjb3JlRm9ybVJlcXVlc3QaIi5hcGkudjEuR2V0U3VibWl0U2NvcmVGb3JtUmVzcG9uc2UiABJICgtTdWJtaXRTY29yZRIaLmFwaS52MS5TdWJtaXRTY29yZVJlcXVlc3QaGy5hcGkudjEuU3VibWl0U2NvcmVSZXNwb25zZSIAEmMKFEdldFNjb3Jlc0ZvckNhdGVnb3J5EiMuYXBpLnYxLkdldFNjb3Jlc0ZvckNhdGVnb3J5UmVxdWVzdBokLmFwaS52MS5HZXRTY29yZXNGb3JDYXRlZ29yeVJlc3BvbnNlIgASXQoSR2V0U2NvcmVzRm9yUGxheWVyEiEuYXBpLnYxLkdldFNjb3Jlc0ZvclBsYXllclJlcXVlc3QaIi5hcGkudjEuR2V0U2NvcmVzRm9yUGxheWVyUmVzcG9uc2UiABJaChFHZXRTY29yZXNGb3JWZW51ZRIgLmFwaS52MS5HZXRTY29yZXNGb3JWZW51ZVJlcXVlc3QaIS5hcGkudjEuR2V0U2NvcmVzRm9yVmVudWVSZXNwb25zZSIAQkBaPmdpdGh1Yi5jb20vcHViZ29sZi9wdWJnb2xmL2FwaS9pbnRlcm5hbC9saWIvcHJvdG8vYXBpL3YxO2FwaXYxYgZwcm90bzM", [file_api_v1_shared, file_google_protobuf_timestamp]);

/**
 * @generated from message api.v1.ClientVersionRequest
 */
export type ClientVersionRequest = Message<"api.v1.ClientVersionRequest"> & {
  /**
   * @generated from field: uint32 client_version = 1;
   */
  clientVersion: number;
};

/**
 * Describes the message api.v1.ClientVersionRequest.
 * Use `create(ClientVersionRequestSchema)` to create a new message.
 */
export const ClientVersionRequestSchema: GenMessage<ClientVersionRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 0);

/**
 * @generated from message api.v1.ClientVersionResponse
 */
export type ClientVersionResponse = Message<"api.v1.ClientVersionResponse"> & {
  /**
   * @generated from field: api.v1.ClientVersionResponse.VersionStatus version_status = 1;
   */
  versionStatus: ClientVersionResponse_VersionStatus;
};

/**
 * Describes the message api.v1.ClientVersionResponse.
 * Use `create(ClientVersionResponseSchema)` to create a new message.
 */
export const ClientVersionResponseSchema: GenMessage<ClientVersionResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 1);

/**
 * @generated from enum api.v1.ClientVersionResponse.VersionStatus
 */
export enum ClientVersionResponse_VersionStatus {
  /**
   * @generated from enum value: VERSION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VERSION_STATUS_OK = 1;
   */
  OK = 1,

  /**
   * @generated from enum value: VERSION_STATUS_OUTDATED = 2;
   */
  OUTDATED = 2,

  /**
   * @generated from enum value: VERSION_STATUS_INCOMPATIBLE = 3;
   */
  INCOMPATIBLE = 3,
}

/**
 * Describes the enum api.v1.ClientVersionResponse.VersionStatus.
 */
export const ClientVersionResponse_VersionStatusSchema: GenEnum<ClientVersionResponse_VersionStatus> = /*@__PURE__*/
  enumDesc(file_api_v1_pubgolf, 1, 0);

/**
 * @generated from message api.v1.PubGolfServiceCreatePlayerRequest
 * @deprecated
 */
export type PubGolfServiceCreatePlayerRequest = Message<"api.v1.PubGolfServiceCreatePlayerRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: api.v1.PlayerData player_data = 2;
   */
  playerData?: PlayerData;
};

/**
 * Describes the message api.v1.PubGolfServiceCreatePlayerRequest.
 * Use `create(PubGolfServiceCreatePlayerRequestSchema)` to create a new message.
 * @deprecated
 */
export const PubGolfServiceCreatePlayerRequestSchema: GenMessage<PubGolfServiceCreatePlayerRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 2);

/**
 * @generated from message api.v1.PubGolfServiceCreatePlayerResponse
 * @deprecated
 */
export type PubGolfServiceCreatePlayerResponse = Message<"api.v1.PubGolfServiceCreatePlayerResponse"> & {
  /**
   * @generated from field: api.v1.Player player = 1;
   */
  player?: Player;
};

/**
 * Describes the message api.v1.PubGolfServiceCreatePlayerResponse.
 * Use `create(PubGolfServiceCreatePlayerResponseSchema)` to create a new message.
 * @deprecated
 */
export const PubGolfServiceCreatePlayerResponseSchema: GenMessage<PubGolfServiceCreatePlayerResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 3);

/**
 * @generated from message api.v1.StartPlayerLoginRequest
 */
export type StartPlayerLoginRequest = Message<"api.v1.StartPlayerLoginRequest"> & {
  /**
   * In E.164 format: https://www.twilio.com/docs/glossary/what-e164
   *
   * @generated from field: string phone_number = 1;
   */
  phoneNumber: string;
};

/**
 * Describes the message api.v1.StartPlayerLoginRequest.
 * Use `create(StartPlayerLoginRequestSchema)` to create a new message.
 */
export const StartPlayerLoginRequestSchema: GenMessage<StartPlayerLoginRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 4);

/**
 * @generated from message api.v1.StartPlayerLoginResponse
 */
export type StartPlayerLoginResponse = Message<"api.v1.StartPlayerLoginResponse"> & {
};

/**
 * Describes the message api.v1.StartPlayerLoginResponse.
 * Use `create(StartPlayerLoginResponseSchema)` to create a new message.
 */
export const StartPlayerLoginResponseSchema: GenMessage<StartPlayerLoginResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 5);

/**
 * @generated from message api.v1.CompletePlayerLoginRequest
 */
export type CompletePlayerLoginRequest = Message<"api.v1.CompletePlayerLoginRequest"> & {
  /**
   * In E.164 format: https://www.twilio.com/docs/glossary/what-e164
   *
   * @generated from field: string phone_number = 1;
   */
  phoneNumber: string;

  /**
   * @generated from field: string auth_code = 2;
   */
  authCode: string;
};

/**
 * Describes the message api.v1.CompletePlayerLoginRequest.
 * Use `create(CompletePlayerLoginRequestSchema)` to create a new message.
 */
export const CompletePlayerLoginRequestSchema: GenMessage<CompletePlayerLoginRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 6);

/**
 * @generated from message api.v1.CompletePlayerLoginResponse
 */
export type CompletePlayerLoginResponse = Message<"api.v1.CompletePlayerLoginResponse"> & {
  /**
   * @generated from field: api.v1.Player player = 1;
   */
  player?: Player;

  /**
   * @generated from field: string auth_token = 2;
   */
  authToken: string;
};

/**
 * Describes the message api.v1.CompletePlayerLoginResponse.
 * Use `create(CompletePlayerLoginResponseSchema)` to create a new message.
 */
export const CompletePlayerLoginResponseSchema: GenMessage<CompletePlayerLoginResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 7);

/**
 * @generated from message api.v1.GetMyPlayerRequest
 */
export type GetMyPlayerRequest = Message<"api.v1.GetMyPlayerRequest"> & {
};

/**
 * Describes the message api.v1.GetMyPlayerRequest.
 * Use `create(GetMyPlayerRequestSchema)` to create a new message.
 */
export const GetMyPlayerRequestSchema: GenMessage<GetMyPlayerRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 8);

/**
 * @generated from message api.v1.GetMyPlayerResponse
 */
export type GetMyPlayerResponse = Message<"api.v1.GetMyPlayerResponse"> & {
  /**
   * @generated from field: api.v1.Player player = 1;
   */
  player?: Player;
};

/**
 * Describes the message api.v1.GetMyPlayerResponse.
 * Use `create(GetMyPlayerResponseSchema)` to create a new message.
 */
export const GetMyPlayerResponseSchema: GenMessage<GetMyPlayerResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 9);

/**
 * @generated from message api.v1.DeleteMyAccountRequest
 */
export type DeleteMyAccountRequest = Message<"api.v1.DeleteMyAccountRequest"> & {
};

/**
 * Describes the message api.v1.DeleteMyAccountRequest.
 * Use `create(DeleteMyAccountRequestSchema)` to create a new message.
 */
export const DeleteMyAccountRequestSchema: GenMessage<DeleteMyAccountRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 10);

/**
 * @generated from message api.v1.DeleteMyAccountResponse
 */
export type DeleteMyAccountResponse = Message<"api.v1.DeleteMyAccountResponse"> & {
};

/**
 * Describes the message api.v1.DeleteMyAccountResponse.
 * Use `create(DeleteMyAccountResponseSchema)` to create a new message.
 */
export const DeleteMyAccountResponseSchema: GenMessage<DeleteMyAccountResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 11);

/**
 * @generated from message api.v1.GetPlayerRequest
 */
export type GetPlayerRequest = Message<"api.v1.GetPlayerRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;
};

/**
 * Describes the message api.v1.GetPlayerRequest.
 * Use `create(GetPlayerRequestSchema)` to create a new message.
 */
export const GetPlayerRequestSchema: GenMessage<GetPlayerRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 12);

/**
 * @generated from message api.v1.GetPlayerResponse
 */
export type GetPlayerResponse = Message<"api.v1.GetPlayerResponse"> & {
  /**
   * @generated from field: api.v1.Player player = 1;
   */
  player?: Player;
};

/**
 * Describes the message api.v1.GetPlayerResponse.
 * Use `create(GetPlayerResponseSchema)` to create a new message.
 */
export const GetPlayerResponseSchema: GenMessage<GetPlayerResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 13);

/**
 * @generated from message api.v1.UpdateRegistrationRequest
 */
export type UpdateRegistrationRequest = Message<"api.v1.UpdateRegistrationRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * @generated from field: api.v1.EventRegistration registration = 2;
   */
  registration?: EventRegistration;
};

/**
 * Describes the message api.v1.UpdateRegistrationRequest.
 * Use `create(UpdateRegistrationRequestSchema)` to create a new message.
 */
export const UpdateRegistrationRequestSchema: GenMessage<UpdateRegistrationRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 14);

/**
 * @generated from message api.v1.UpdateRegistrationResponse
 */
export type UpdateRegistrationResponse = Message<"api.v1.UpdateRegistrationResponse"> & {
  /**
   * @generated from field: api.v1.EventRegistration registration = 1;
   */
  registration?: EventRegistration;
};

/**
 * Describes the message api.v1.UpdateRegistrationResponse.
 * Use `create(UpdateRegistrationResponseSchema)` to create a new message.
 */
export const UpdateRegistrationResponseSchema: GenMessage<UpdateRegistrationResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 15);

/**
 * @generated from message api.v1.UpdatePlayerDataRequest
 */
export type UpdatePlayerDataRequest = Message<"api.v1.UpdatePlayerDataRequest"> & {
  /**
   * @generated from field: string player_id = 1;
   */
  playerId: string;

  /**
   * @generated from field: api.v1.PlayerData data = 2;
   */
  data?: PlayerData;
};

/**
 * Describes the message api.v1.UpdatePlayerDataRequest.
 * Use `create(UpdatePlayerDataRequestSchema)` to create a new message.
 */
export const UpdatePlayerDataRequestSchema: GenMessage<UpdatePlayerDataRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 16);

/**
 * @generated from message api.v1.UpdatePlayerDataResponse
 */
export type UpdatePlayerDataResponse = Message<"api.v1.UpdatePlayerDataResponse"> & {
  /**
   * @generated from field: api.v1.PlayerData data = 1;
   */
  data?: PlayerData;
};

/**
 * Describes the message api.v1.UpdatePlayerDataResponse.
 * Use `create(UpdatePlayerDataResponseSchema)` to create a new message.
 */
export const UpdatePlayerDataResponseSchema: GenMessage<UpdatePlayerDataResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 17);

/**
 * @generated from message api.v1.GetScheduleRequest
 */
export type GetScheduleRequest = Message<"api.v1.GetScheduleRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: optional uint32 cached_data_version = 2;
   */
  cachedDataVersion?: number;
};

/**
 * Describes the message api.v1.GetScheduleRequest.
 * Use `create(GetScheduleRequestSchema)` to create a new message.
 */
export const GetScheduleRequestSchema: GenMessage<GetScheduleRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 18);

/**
 * @generated from message api.v1.GetScheduleResponse
 */
export type GetScheduleResponse = Message<"api.v1.GetScheduleResponse"> & {
  /**
   * @generated from field: uint32 latest_data_version = 1;
   */
  latestDataVersion: number;

  /**
   * @generated from field: optional api.v1.GetScheduleResponse.Schedule schedule = 2;
   */
  schedule?: GetScheduleResponse_Schedule;
};

/**
 * Describes the message api.v1.GetScheduleResponse.
 * Use `create(GetScheduleResponseSchema)` to create a new message.
 */
export const GetScheduleResponseSchema: GenMessage<GetScheduleResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 19);

/**
 * @generated from message api.v1.GetScheduleResponse.Schedule
 */
export type GetScheduleResponse_Schedule = Message<"api.v1.GetScheduleResponse.Schedule"> & {
  /**
   * List of past venues. Does not include the current venue.
   *
   * @generated from field: repeated uint32 visited_venue_keys = 1;
   */
  visitedVenueKeys: number[];

  /**
   * Optional in the case that the event hasn't started yet.
   *
   * @generated from field: optional uint32 current_venue_key = 2;
   */
  currentVenueKey?: number;

  /**
   * Optional in the case that the next venue isn't yet visible to players, or after the second to last venue. The next venue key only becomes visible X mins before the next venue's start time.
   *
   * @generated from field: optional uint32 next_venue_key = 3;
   */
  nextVenueKey?: number;

  /**
   * @generated from field: optional google.protobuf.Timestamp next_venue_start = 4;
   */
  nextVenueStart?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp event_end = 5;
   */
  eventEnd?: Timestamp;

  /**
   * current_venue_description contains rules specific to the current venue, in markdown format.
   *
   * @generated from field: optional string current_venue_description = 6;
   */
  currentVenueDescription?: string;
};

/**
 * Describes the message api.v1.GetScheduleResponse.Schedule.
 * Use `create(GetScheduleResponse_ScheduleSchema)` to create a new message.
 */
export const GetScheduleResponse_ScheduleSchema: GenMessage<GetScheduleResponse_Schedule> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 19, 0);

/**
 * @generated from message api.v1.GetVenueRequest
 */
export type GetVenueRequest = Message<"api.v1.GetVenueRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: repeated uint32 venue_keys = 2;
   */
  venueKeys: number[];
};

/**
 * Describes the message api.v1.GetVenueRequest.
 * Use `create(GetVenueRequestSchema)` to create a new message.
 */
export const GetVenueRequestSchema: GenMessage<GetVenueRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 20);

/**
 * @generated from message api.v1.GetVenueResponse
 */
export type GetVenueResponse = Message<"api.v1.GetVenueResponse"> & {
  /**
   * Map of requested venue keys to Venue objects.
   *
   * @generated from field: map<uint32, api.v1.GetVenueResponse.VenueWrapper> venues = 1;
   */
  venues: { [key: number]: GetVenueResponse_VenueWrapper };
};

/**
 * Describes the message api.v1.GetVenueResponse.
 * Use `create(GetVenueResponseSchema)` to create a new message.
 */
export const GetVenueResponseSchema: GenMessage<GetVenueResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 21);

/**
 * VenueWrapper allows us to return an empty wrapper in the case of an invalid or unauthorized venue ID.
 *
 * @generated from message api.v1.GetVenueResponse.VenueWrapper
 */
export type GetVenueResponse_VenueWrapper = Message<"api.v1.GetVenueResponse.VenueWrapper"> & {
  /**
   * @generated from field: optional api.v1.Venue venue = 1;
   */
  venue?: Venue;
};

/**
 * Describes the message api.v1.GetVenueResponse.VenueWrapper.
 * Use `create(GetVenueResponse_VenueWrapperSchema)` to create a new message.
 */
export const GetVenueResponse_VenueWrapperSchema: GenMessage<GetVenueResponse_VenueWrapper> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 21, 0);

/**
 * @generated from message api.v1.ListContentItemsRequest
 */
export type ListContentItemsRequest = Message<"api.v1.ListContentItemsRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;
};

/**
 * Describes the message api.v1.ListContentItemsRequest.
 * Use `create(ListContentItemsRequestSchema)` to create a new message.
 */
export const ListContentItemsRequestSchema: GenMessage<ListContentItemsRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 22);

/**
 * @generated from message api.v1.ListContentItemsResponse
 */
export type ListContentItemsResponse = Message<"api.v1.ListContentItemsResponse"> & {
  /**
   * @generated from field: repeated api.v1.ListContentItemsResponse.Section sections = 1;
   */
  sections: ListContentItemsResponse_Section[];
};

/**
 * Describes the message api.v1.ListContentItemsResponse.
 * Use `create(ListContentItemsResponseSchema)` to create a new message.
 */
export const ListContentItemsResponseSchema: GenMessage<ListContentItemsResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 23);

/**
 * @generated from message api.v1.ListContentItemsResponse.ContentItemMetaData
 */
export type ListContentItemsResponse_ContentItemMetaData = Message<"api.v1.ListContentItemsResponse.ContentItemMetaData"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * icon_key is an SF-Symbol name (e.g. "heart.fill").
   *
   * @generated from field: string icon_key = 3;
   */
  iconKey: string;

  /**
   * @generated from field: api.v1.Color icon_color = 4;
   */
  iconColor?: Color;
};

/**
 * Describes the message api.v1.ListContentItemsResponse.ContentItemMetaData.
 * Use `create(ListContentItemsResponse_ContentItemMetaDataSchema)` to create a new message.
 */
export const ListContentItemsResponse_ContentItemMetaDataSchema: GenMessage<ListContentItemsResponse_ContentItemMetaData> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 23, 0);

/**
 * @generated from message api.v1.ListContentItemsResponse.Section
 */
export type ListContentItemsResponse_Section = Message<"api.v1.ListContentItemsResponse.Section"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: repeated api.v1.ListContentItemsResponse.ContentItemMetaData content_sections = 2;
   */
  contentSections: ListContentItemsResponse_ContentItemMetaData[];

  /**
   * icon_key is an SF-Symbol name (e.g. "heart.fill").
   *
   * @generated from field: string icon_key = 3;
   */
  iconKey: string;

  /**
   * @generated from field: api.v1.Color icon_color = 4;
   */
  iconColor?: Color;
};

/**
 * Describes the message api.v1.ListContentItemsResponse.Section.
 * Use `create(ListContentItemsResponse_SectionSchema)` to create a new message.
 */
export const ListContentItemsResponse_SectionSchema: GenMessage<ListContentItemsResponse_Section> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 23, 1);

/**
 * @generated from message api.v1.GetContentItemRequest
 */
export type GetContentItemRequest = Message<"api.v1.GetContentItemRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message api.v1.GetContentItemRequest.
 * Use `create(GetContentItemRequestSchema)` to create a new message.
 */
export const GetContentItemRequestSchema: GenMessage<GetContentItemRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 24);

/**
 * @generated from message api.v1.GetContentItemResponse
 */
export type GetContentItemResponse = Message<"api.v1.GetContentItemResponse"> & {
  /**
   * content is in markdown format.
   *
   * @generated from field: string content = 1;
   */
  content: string;
};

/**
 * Describes the message api.v1.GetContentItemResponse.
 * Use `create(GetContentItemResponseSchema)` to create a new message.
 */
export const GetContentItemResponseSchema: GenMessage<GetContentItemResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 25);

/**
 * @generated from message api.v1.GetSubmitScoreFormRequest
 */
export type GetSubmitScoreFormRequest = Message<"api.v1.GetSubmitScoreFormRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: uint32 venue_key = 2;
   */
  venueKey: number;

  /**
   * @generated from field: string player_id = 3;
   */
  playerId: string;
};

/**
 * Describes the message api.v1.GetSubmitScoreFormRequest.
 * Use `create(GetSubmitScoreFormRequestSchema)` to create a new message.
 */
export const GetSubmitScoreFormRequestSchema: GenMessage<GetSubmitScoreFormRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 26);

/**
 * @generated from message api.v1.GetSubmitScoreFormResponse
 */
export type GetSubmitScoreFormResponse = Message<"api.v1.GetSubmitScoreFormResponse"> & {
  /**
   * @generated from field: api.v1.ScoreStatus status = 1;
   */
  status: ScoreStatus;

  /**
   * @generated from field: api.v1.Form form = 2;
   */
  form?: Form;
};

/**
 * Describes the message api.v1.GetSubmitScoreFormResponse.
 * Use `create(GetSubmitScoreFormResponseSchema)` to create a new message.
 */
export const GetSubmitScoreFormResponseSchema: GenMessage<GetSubmitScoreFormResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 27);

/**
 * @generated from message api.v1.SubmitScoreRequest
 */
export type SubmitScoreRequest = Message<"api.v1.SubmitScoreRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: uint32 venue_key = 2;
   */
  venueKey: number;

  /**
   * @generated from field: string player_id = 3;
   */
  playerId: string;

  /**
   * @generated from field: optional string idempotency_key = 4;
   */
  idempotencyKey?: string;

  /**
   * @generated from field: api.v1.FormSubmission data = 5;
   */
  data?: FormSubmission;
};

/**
 * Describes the message api.v1.SubmitScoreRequest.
 * Use `create(SubmitScoreRequestSchema)` to create a new message.
 */
export const SubmitScoreRequestSchema: GenMessage<SubmitScoreRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 28);

/**
 * @generated from message api.v1.SubmitScoreResponse
 */
export type SubmitScoreResponse = Message<"api.v1.SubmitScoreResponse"> & {
  /**
   * @generated from field: api.v1.ScoreStatus status = 1;
   */
  status: ScoreStatus;
};

/**
 * Describes the message api.v1.SubmitScoreResponse.
 * Use `create(SubmitScoreResponseSchema)` to create a new message.
 */
export const SubmitScoreResponseSchema: GenMessage<SubmitScoreResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 29);

/**
 * @generated from message api.v1.GetScoresForCategoryRequest
 */
export type GetScoresForCategoryRequest = Message<"api.v1.GetScoresForCategoryRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: api.v1.ScoringCategory category = 2;
   */
  category: ScoringCategory;
};

/**
 * Describes the message api.v1.GetScoresForCategoryRequest.
 * Use `create(GetScoresForCategoryRequestSchema)` to create a new message.
 */
export const GetScoresForCategoryRequestSchema: GenMessage<GetScoresForCategoryRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 30);

/**
 * @generated from message api.v1.GetScoresForCategoryResponse
 */
export type GetScoresForCategoryResponse = Message<"api.v1.GetScoresForCategoryResponse"> & {
  /**
   * @generated from field: api.v1.ScoreBoard score_board = 1;
   */
  scoreBoard?: ScoreBoard;
};

/**
 * Describes the message api.v1.GetScoresForCategoryResponse.
 * Use `create(GetScoresForCategoryResponseSchema)` to create a new message.
 */
export const GetScoresForCategoryResponseSchema: GenMessage<GetScoresForCategoryResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 31);

/**
 * @generated from message api.v1.GetScoresForPlayerRequest
 */
export type GetScoresForPlayerRequest = Message<"api.v1.GetScoresForPlayerRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: string player_id = 2;
   */
  playerId: string;
};

/**
 * Describes the message api.v1.GetScoresForPlayerRequest.
 * Use `create(GetScoresForPlayerRequestSchema)` to create a new message.
 */
export const GetScoresForPlayerRequestSchema: GenMessage<GetScoresForPlayerRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 32);

/**
 * @generated from message api.v1.GetScoresForPlayerResponse
 */
export type GetScoresForPlayerResponse = Message<"api.v1.GetScoresForPlayerResponse"> & {
  /**
   * @generated from field: api.v1.ScoreBoard score_board = 1;
   */
  scoreBoard?: ScoreBoard;
};

/**
 * Describes the message api.v1.GetScoresForPlayerResponse.
 * Use `create(GetScoresForPlayerResponseSchema)` to create a new message.
 */
export const GetScoresForPlayerResponseSchema: GenMessage<GetScoresForPlayerResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 33);

/**
 * @generated from message api.v1.GetScoresForVenueRequest
 */
export type GetScoresForVenueRequest = Message<"api.v1.GetScoresForVenueRequest"> & {
  /**
   * @generated from field: string event_key = 1;
   */
  eventKey: string;

  /**
   * @generated from field: string venue_id = 2;
   */
  venueId: string;
};

/**
 * Describes the message api.v1.GetScoresForVenueRequest.
 * Use `create(GetScoresForVenueRequestSchema)` to create a new message.
 */
export const GetScoresForVenueRequestSchema: GenMessage<GetScoresForVenueRequest> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 34);

/**
 * @generated from message api.v1.GetScoresForVenueResponse
 */
export type GetScoresForVenueResponse = Message<"api.v1.GetScoresForVenueResponse"> & {
  /**
   * @generated from field: api.v1.ScoreBoard score_board = 1;
   */
  scoreBoard?: ScoreBoard;
};

/**
 * Describes the message api.v1.GetScoresForVenueResponse.
 * Use `create(GetScoresForVenueResponseSchema)` to create a new message.
 */
export const GetScoresForVenueResponseSchema: GenMessage<GetScoresForVenueResponse> = /*@__PURE__*/
  messageDesc(file_api_v1_pubgolf, 35);

/**
 * @generated from enum api.v1.ScoreStatus
 */
export enum ScoreStatus {
  /**
   * @generated from enum value: SCORE_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SCORE_STATUS_REQUIRED = 1;
   */
  REQUIRED = 1,

  /**
   * @generated from enum value: SCORE_STATUS_OPTIONAL = 2;
   */
  OPTIONAL = 2,

  /**
   * @generated from enum value: SCORE_STATUS_NOT_REQUIRED = 3;
   */
  NOT_REQUIRED = 3,

  /**
   * @generated from enum value: SCORE_STATUS_SUBMITTED_EDITABLE = 4;
   */
  SUBMITTED_EDITABLE = 4,

  /**
   * @generated from enum value: SCORE_STATUS_SUBMITTED_NON_EDITABLE = 5;
   */
  SUBMITTED_NON_EDITABLE = 5,
}

/**
 * Describes the enum api.v1.ScoreStatus.
 */
export const ScoreStatusSchema: GenEnum<ScoreStatus> = /*@__PURE__*/
  enumDesc(file_api_v1_pubgolf, 0);

/**
 * PubGolfService is the API server which handles all score keeping, scheduling and account management for pub golf.
 *
 * @generated from service api.v1.PubGolfService
 */
export const PubGolfService: GenService<{
  /**
   * ClientVersion (unauthenticated) indicates to the server that a client of a given version is attempting to connect, and allows the server to respond with a "soft" or "hard" upgrade notification.
   *
   * @generated from rpc api.v1.PubGolfService.ClientVersion
   */
  clientVersion: {
    methodKind: "unary";
    input: typeof ClientVersionRequestSchema;
    output: typeof ClientVersionResponseSchema;
  },
  /**
   * CreatePlayer creates a new player profile for a given event.
   *
   * Deprecated: Use `StartPlayerLogin` RPC instead.
   *
   * @generated from rpc api.v1.PubGolfService.CreatePlayer
   * @deprecated
   */
  createPlayer: {
    methodKind: "unary";
    input: typeof PubGolfServiceCreatePlayerRequestSchema;
    output: typeof PubGolfServiceCreatePlayerResponseSchema;
  },
  /**
   * StartPlayerLogin (unauthenticated) registers the player's contact info if the player doesn't exist, then sends an auth code.
   *
   * @generated from rpc api.v1.PubGolfService.StartPlayerLogin
   */
  startPlayerLogin: {
    methodKind: "unary";
    input: typeof StartPlayerLoginRequestSchema;
    output: typeof StartPlayerLoginResponseSchema;
  },
  /**
   * CompletePlayerLogin (unauthenticated) accepts an auth code and logs in the player, returning the data necessary to bootstrap a player's session in the app.
   *
   * @generated from rpc api.v1.PubGolfService.CompletePlayerLogin
   */
  completePlayerLogin: {
    methodKind: "unary";
    input: typeof CompletePlayerLoginRequestSchema;
    output: typeof CompletePlayerLoginResponseSchema;
  },
  /**
   * GetMyPlayer is an authenticated request that returns the same data as `CompletePlayerLogin()` if the player's auth token is still valid.
   *
   * @generated from rpc api.v1.PubGolfService.GetMyPlayer
   */
  getMyPlayer: {
    methodKind: "unary";
    input: typeof GetMyPlayerRequestSchema;
    output: typeof GetMyPlayerResponseSchema;
  },
  /**
   * DeleteMyAccount purges all data related to the authenticated player.
   *
   * @generated from rpc api.v1.PubGolfService.DeleteMyAccount
   */
  deleteMyAccount: {
    methodKind: "unary";
    input: typeof DeleteMyAccountRequestSchema;
    output: typeof DeleteMyAccountResponseSchema;
  },
  /**
   * GetPlayer returns the player object including profile data and event registrations, given a player_id.
   *
   * @generated from rpc api.v1.PubGolfService.GetPlayer
   */
  getPlayer: {
    methodKind: "unary";
    input: typeof GetPlayerRequestSchema;
    output: typeof GetPlayerResponseSchema;
  },
  /**
   * UpdateRegistration upserts an event registration for the given player.
   *
   * @generated from rpc api.v1.PubGolfService.UpdateRegistration
   */
  updateRegistration: {
    methodKind: "unary";
    input: typeof UpdateRegistrationRequestSchema;
    output: typeof UpdateRegistrationResponseSchema;
  },
  /**
   * UpdatePlayerData updates the given player's profile data.
   *
   * @generated from rpc api.v1.PubGolfService.UpdatePlayerData
   */
  updatePlayerData: {
    methodKind: "unary";
    input: typeof UpdatePlayerDataRequestSchema;
    output: typeof UpdatePlayerDataResponseSchema;
  },
  /**
   * GetSchedule returns the list of visible venues, as well as the next venue transition time. It optionally accepts a data version to allow local caching.
   *
   * @generated from rpc api.v1.PubGolfService.GetSchedule
   */
  getSchedule: {
    methodKind: "unary";
    input: typeof GetScheduleRequestSchema;
    output: typeof GetScheduleResponseSchema;
  },
  /**
   * GetVenue performs a bulk lookup of venue metadata by ID. IDs are scoped to an event key.
   *
   * @generated from rpc api.v1.PubGolfService.GetVenue
   */
  getVenue: {
    methodKind: "unary";
    input: typeof GetVenueRequestSchema;
    output: typeof GetVenueResponseSchema;
  },
  /**
   * ListContentItems
   *
   * @generated from rpc api.v1.PubGolfService.ListContentItems
   */
  listContentItems: {
    methodKind: "unary";
    input: typeof ListContentItemsRequestSchema;
    output: typeof ListContentItemsResponseSchema;
  },
  /**
   * GetContentItem
   *
   * @generated from rpc api.v1.PubGolfService.GetContentItem
   */
  getContentItem: {
    methodKind: "unary";
    input: typeof GetContentItemRequestSchema;
    output: typeof GetContentItemResponseSchema;
  },
  /**
   * GetSubmitScoreForm returns the form definition for submitting or revising a player's score at a specific event venue.
   *
   * @generated from rpc api.v1.PubGolfService.GetSubmitScoreForm
   */
  getSubmitScoreForm: {
    methodKind: "unary";
    input: typeof GetSubmitScoreFormRequestSchema;
    output: typeof GetSubmitScoreFormResponseSchema;
  },
  /**
   * GetSubmitScoreForm submits a player's proposed score at a specific event venue.
   *
   * @generated from rpc api.v1.PubGolfService.SubmitScore
   */
  submitScore: {
    methodKind: "unary";
    input: typeof SubmitScoreRequestSchema;
    output: typeof SubmitScoreResponseSchema;
  },
  /**
   * GetScoresForCategory
   *
   * @generated from rpc api.v1.PubGolfService.GetScoresForCategory
   */
  getScoresForCategory: {
    methodKind: "unary";
    input: typeof GetScoresForCategoryRequestSchema;
    output: typeof GetScoresForCategoryResponseSchema;
  },
  /**
   * GetScoresForPlayer
   *
   * @generated from rpc api.v1.PubGolfService.GetScoresForPlayer
   */
  getScoresForPlayer: {
    methodKind: "unary";
    input: typeof GetScoresForPlayerRequestSchema;
    output: typeof GetScoresForPlayerResponseSchema;
  },
  /**
   * GetScoresForVenue
   *
   * @generated from rpc api.v1.PubGolfService.GetScoresForVenue
   */
  getScoresForVenue: {
    methodKind: "unary";
    input: typeof GetScoresForVenueRequestSchema;
    output: typeof GetScoresForVenueResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_v1_pubgolf, 0);

